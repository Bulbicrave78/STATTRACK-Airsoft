#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>


#define OLED_RESET -1
#define BOUTON 2  // Bouton sur la broche 3

int kill = 0;
uint8_t Init = 0; // Stocké sur 1 octet
volatile bool flag = false; // Drapeau pour détecter un appui
//AT24C256 eeprom(0x50);


Adafruit_SSD1306 afficheur(OLED_RESET);        // création de l'objet afficheur

// '0redim', 16x23px
const unsigned char num0 [] PROGMEM = {
	0x1d, 0xb8, 0x1d, 0xb8, 0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x3b, 
	0xc0, 0x3b, 0x00, 0x00, 0xc1, 0x83, 0xc1, 0x83, 0xc1, 0x83, 0x00, 0x00, 0xdc, 0x03, 0xdc, 0x03, 
	0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0x1d, 0xb8, 0x1d, 0xb8
};
// '1redim', 16x23px
const unsigned char num1 [] PROGMEM = {
	0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x02, 0x60, 0x03, 0x60, 0x02, 0x40, 0x00, 0x00, 0x30, 0x60, 
	0x30, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00
};
// '3redim', 16x23px
const unsigned char num3 [] PROGMEM = {
	0x1d, 0xb8, 0x1d, 0xb8, 0x00, 0x00, 0xc0, 0x02, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x03, 
	0x00, 0x03, 0x00, 0x00, 0x01, 0x90, 0x01, 0xb8, 0x01, 0xb0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 
	0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0x1d, 0xb8, 0x1d, 0xb8
};
// '4redim', 16x23px
const unsigned char num4 [] PROGMEM = {
	0x00, 0x38, 0x00, 0x38, 0x00, 0x00, 0x01, 0x90, 0x01, 0xb8, 0x01, 0xb0, 0x00, 0x00, 0x1c, 0x38, 
	0x1c, 0x38, 0x00, 0x00, 0xc0, 0x10, 0xc0, 0x38, 0xc0, 0x10, 0x00, 0x00, 0xdd, 0xbb, 0xdd, 0xbb, 
	0x00, 0x00, 0x00, 0x30, 0x00, 0x38, 0x00, 0x10, 0x00, 0x00, 0x00, 0x38, 0x00, 0x38
};
// '5redim', 16x23px
const unsigned char num5 [] PROGMEM = {
	0xdd, 0xb3, 0xdd, 0xbb, 0x00, 0x00, 0x40, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xdd, 0xb8, 
	0xdd, 0xb8, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 
	0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x02, 0x00, 0x00, 0x1d, 0xb8, 0x1d, 0xb8
};
// '6redim', 16x23px
const unsigned char num6 [] PROGMEM = {
	0x1d, 0xb0, 0x1d, 0xb8, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x00, 
	0xc0, 0x00, 0x00, 0x00, 0xc9, 0x90, 0xdd, 0xb8, 0xc9, 0x90, 0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 
	0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xb8, 0x1d, 0xb0
};
// '8redim', 16x23px
const unsigned char num8 [] PROGMEM = {
	0x0d, 0xb0, 0x0d, 0xb8, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x03, 
	0xc0, 0x03, 0x00, 0x00, 0x09, 0x90, 0x0d, 0xb8, 0x09, 0x90, 0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 
	0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xb8, 0x0d, 0xb0
};
// '7redim', 16x23px
const unsigned char num7 [] PROGMEM = {
	0xcd, 0xbb, 0xcd, 0xbb, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 
	0x00, 0x38, 0x00, 0x00, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 
	0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00
};
// '2redim', 16x23px
const unsigned char num2 [] PROGMEM = {
	0x1d, 0xb8, 0x1d, 0xb8, 0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x03, 
	0xc0, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x38, 0x00, 0x10, 0x00, 0x00, 0x01, 0x80, 0x01, 0x80, 
	0x00, 0x00, 0x0c, 0x00, 0x1c, 0x00, 0x08, 0x00, 0x00, 0x00, 0xdd, 0xbb, 0xdd, 0xbb
};
// '9redim', 16x23px
const unsigned char num9 [] PROGMEM = {
	0x0d, 0xb8, 0x0d, 0xb8, 0x00, 0x00, 0x40, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x03, 
	0xc0, 0x03, 0x00, 0x00, 0x0d, 0x93, 0x0d, 0xbb, 0x09, 0x93, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 
	0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xb8, 0x0d, 0xb0
};



void setup()   
{   
  pinMode(BOUTON, INPUT_PULLUP); // Bouton avec pull-up interne
  attachInterrupt(digitalPinToInterrupt(BOUTON), onBoutonPress, FALLING); // Déclenche sur appui
  //eeprom.read(0, &Init, sizeof(Init));
  //eeprom.read(1, (uint8_t*)&kill, sizeof(kill));
  afficheur.begin(SSD1306_SWITCHCAPVCC, 0x3C);   // initialisation de l'objet afficheur
  Serial.begin(9600);
  Serial.print("Valeur Init: ");
  Serial.println(Init);
  Serial.print("Kill init: ");
  Serial.println(kill);             
  afficheur.clearDisplay();   
                                           

  if (Init != 1) {  
    Serial.println("Première initialisation...");
    kill = 0;
    Init = 1;
   // eeprom.write(0, &Init, sizeof(Init));
    delay(10);  // Attente pour éviter des corruptions mémoire
   // eeprom.write(1, (uint8_t*)&kill, sizeof(kill));
    delay(10);
  }
 kill = 101;
 Serial.print(kill);
 afficheur.setTextSize(2);                                              // choix de la taille des caractères
 afficheur.setTextColor(1);                                            // caractères en blanc
 afficheur.setCursor(43,19);    
 afficheur.print(kill);
  afficheur.drawBitmap(0, 0,  Number0, 30, 37, 2);             // affichage de l'image love
 afficheur.display();  
  
}

 
void loop()
{


  if (flag) {
    flag = false;

    kill++;
    Serial.print("Kill: ");
    Serial.println(kill);
    afficheur.clearDisplay();   
    afficheur.setTextSize(2);                                              // choix de la taille des caractères
    afficheur.setTextColor(1);                                            // caractères en blanc
    afficheur.setCursor(43,19);  
    afficheur.print(kill);
    afficheur.display(); 

    // Sauvegarde dans l'EEPROM
    //eeprom.write(1, (uint8_t*)&kill, sizeof(kill));
    delay(10);
 }
}

// Fonction appelée lors d'un appui sur le bouton
void onBoutonPress() {
  static unsigned long lastPress = 0;
  unsigned long now = millis();

  if (now - lastPress > 50) { // Anti-rebond logiciel
    flag = true;
  }
  lastPress = now;
}
